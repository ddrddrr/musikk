# Generated by Django 5.1.7 on 2025-04-25 09:15

import django.db.models.deletion
import musikk.utils
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="SongCollection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=128)),
                (
                    "description",
                    models.TextField(blank=True, default="", max_length=512),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to=musikk.utils.image_path
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BaseSong",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=128)),
                (
                    "description",
                    models.TextField(blank=True, default="", max_length=512),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to=musikk.utils.image_path
                    ),
                ),
                ("like_count", models.IntegerField(blank=True, default=0)),
                ("dislike_count", models.IntegerField(blank=True, default=0)),
                (
                    "content_path",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Path to the directory with all song files.",
                        max_length=1024,
                    ),
                ),
                (
                    "mpd",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Path to the mpd file representing the song.",
                        max_length=1024,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SongCollectionMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "extras",
                    models.TextField(
                        help_text="Any extra information from the author.",
                        max_length=2048,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SongMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("written_by", models.CharField(max_length=64)),
                ("performed_by", models.CharField(max_length=64)),
                (
                    "extras",
                    models.TextField(
                        help_text="Any extra information from the author.",
                        max_length=2000,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SongQueue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("song_count", models.IntegerField(default=0)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "songcollection_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="streaming.songcollection",
                    ),
                ),
                (
                    "year_released",
                    models.IntegerField(blank=True, default=None, null=True),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("streaming.songcollection",),
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "songcollection_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="streaming.songcollection",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("streaming.songcollection",),
        ),
        migrations.CreateModel(
            name="UserHistory",
            fields=[
                (
                    "songcollection_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="streaming.songcollection",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("streaming.songcollection",),
        ),
        migrations.AddField(
            model_name="songcollection",
            name="metadata",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="streaming.songcollectionmetadata",
            ),
        ),
        migrations.CreateModel(
            name="SongCollectionSong",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "position",
                    models.IntegerField(
                        default=None,
                        help_text="The order of the song in the collection.",
                        null=True,
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="streaming.basesong",
                    ),
                ),
                (
                    "song_collection",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="streaming.songcollection",
                    ),
                ),
            ],
            options={
                "ordering": ("position",),
            },
        ),
        migrations.AddField(
            model_name="songcollection",
            name="songs",
            field=models.ManyToManyField(
                through="streaming.SongCollectionSong", to="streaming.basesong"
            ),
        ),
        migrations.AddField(
            model_name="basesong",
            name="metadata",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="song",
                to="streaming.songmetadata",
            ),
        ),
        migrations.CreateModel(
            name="SongQueueNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                (
                    "next",
                    models.OneToOneField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="streaming.songqueuenode",
                    ),
                ),
                (
                    "prev",
                    models.OneToOneField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="streaming.songqueuenode",
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="streaming.basesong",
                    ),
                ),
                (
                    "song_queue",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nodes",
                        to="streaming.songqueue",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="songqueue",
            name="add_after",
            field=models.OneToOneField(
                default=None,
                help_text="The node after which the songs will be appended when `Add To Queue` is used. If the song/collection is appended, equal to this song/last song in collection.Otherwise is equal to `head`.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="streaming.songqueuenode",
            ),
        ),
        migrations.AddField(
            model_name="songqueue",
            name="head",
            field=models.OneToOneField(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="streaming.songqueuenode",
            ),
        ),
        migrations.AddField(
            model_name="songqueue",
            name="tail",
            field=models.OneToOneField(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="streaming.songqueuenode",
            ),
        ),
        migrations.CreateModel(
            name="Stream",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, unique=True
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_modified", models.DateTimeField(auto_now=True)),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
