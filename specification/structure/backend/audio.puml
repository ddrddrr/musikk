@startuml BackendAudio

class FFMPEGWrapper <<singleton>>{
    + {static} converters: list[AudioConverter]
    ' returns manifest paths - {manifest_format: path}
    + {static} convert_song(song: bytes): dict[str, str]
}

interface AudioConverter{
    + frag_duration = 2000ms(segment duration)
    + codec: str
    + bitrates: list[int]
    + extras: dict
    + song_identifier: uuid | None

    + __init__(song: bytes): None
    + ffmpeg_args(): str
    ' generate uuid inside(used for song later on),
    ' take global var for base path --> create paths
    + manifest_path(): str
    + chunk_paths(): Generator[str]
}
class DASHConverter implements AudioConverter
class HLSConverter implements AudioConverter

@enduml