@startuml BackendAudio

skinparam linetype ortho

class FFMPEGWrapper{
    + converters: list[AudioConverter]

    + add_converter(converted: AudioConverter): bool
    ' returns manifest paths - {manifest_format: path}
    + convert_song(song: bytes): dict[str, str]
}
FFMPEGWrapper -up[dashed]> AudioConverter: <<uses>>

abstract class AudioConverter{
    + {static} dash_segment_type: str = "mp4"

    + song_identifier: uuid | None
    + seg_duration = 5000ms
    + codec_bitrate_map: dict[str, list[int]]
    + extras: dict
    ' generate uuid inside(used for song later on),
    ' take global var for base path --> create paths

    + __init__(song: bytes): None
    + max_playback_rate(): int
    + min_playback_rate(): int
    + manifest_path(): str
    + init_seg_name(): str
    + media_seg_name(): str
    + ffmpeg_args(): str
}
class DASHConverter
class HLSConverter
DASHConverter -|> AudioConverter
HLSConverter -|> AudioConverter

'layout
@enduml